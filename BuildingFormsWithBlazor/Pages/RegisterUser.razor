@page "/users"
@using BuildingFormsWithBlazor.DataStructures
@inject BuildingFormsWithBlazor.Services.UserService userService 
@inject NavigationManager navigationManager




    <EditForm Model="user" OnValidSubmit="AddNewUser" class="mt-2"  >


        <div class="form-group col-12 row">

            <label class="font-weight-bold col-2">First Name </label>
            <InputText class="form-control col-3" @bind-Value="user.FirstName" />
        </div>

        <div class="form-group col-12 row">

            <label class="font-weight-bold col-2">Last Name </label>
            <InputText class="form-control col-3" @bind-Value="user.LastName" />
        </div>

        <div class="form-group col-12 row">

            <label class="font-weight-bold col-2">Email </label>
            <InputText class="form-control col-3" @bind-Value="user.Email" />
        </div>
        <div class="form-group col-12 row">

            <label class="font-weight-bold col-2">BirthDay </label>
            <InputDate class="form-control col-3" @bind-Value="user.DateOfBirth" />
        </div>
        <div class="form-group col-12 row">

            <label class="font-weight-bold col-2">IsActive </label>
            <InputCheckbox class="form-control col-1" @bind-Value="user.IsActive" />
        </div>
        <div class="form-group col-12 row">

            <label class="font-weight-bold col-2">City </label>
            <InputText class="form-control col-3" @bind-Value="user.City" />
        </div>
        <button type="submit" class="btn  btn-outline-primary ">Add User</button>
    </EditForm>

<UserList AppUsers="Users" />



@code {


    private User user;
    private User[] Users;
    private int count = 0;
    private bool showSpinner = false;

    protected override async Task OnInitializedAsync()
    {
        user = new User();
        Users = new User[0];
        Users = await userService.GetUsersAsync();
        await base.OnInitializedAsync();
    }

    private async void AddNewUser()
    {

        showSpinner = true;
        await  userService.AddUser(user);
       
        navigationManager.NavigateTo("/");
    }


}
